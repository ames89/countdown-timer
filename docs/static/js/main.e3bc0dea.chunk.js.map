{"version":3,"sources":["libs/decode-uri-component/index.js","App.module.scss","libs/query-string/index.js","utils/index.js","utils/constants.js","App.js","serviceWorker.js","GlobalState/index.js","index.js"],"names":["singleMatcher","RegExp","multiMatcher","decodeComponents","components","split","decodeURIComponent","join","err","length","left","slice","right","Array","prototype","concat","call","decode","input","tokens","match","i","module","exports","encodedURI","TypeError","replace","replaceMap","%FE%FF","%FF%FE","exec","result","entries","Object","keys","key","customDecodeURIComponent","outer-App","App","decodeComponent","require","value","options","parse","formatter","arrayFormat","accumulator","undefined","parserForArrayFormat","assign","ret","create","trim","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","_param$replace$split","_param$replace$split2","slicedToArray","return","sort","reduce","Boolean","isArray","keysSorter","a","b","Number","map","queryObject","queryString","window","location","search","getLocalStorageTime","time","sessionStorage","getItem","currentPercentageTime","currTime","localStorageTime","queryMaxTime","maxTime","actualTime","isNaN","setItem","Math","min","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","setLocalInterval","interval","setInterval","setWidth","playTimer","pauseTimer","clearInterval","playPauseTimer","resetTimer","currentTime","newWidth","setState","width","state","color","background","_this2","addEventListener","oncontextmenu","removeEventListener","reactn_default","createElement","className","styles","style","backgroundColor","borderColor","Component","hostname","setGlobal","addReducer","fetch","then","response","text","html","data","x","ReactDOM","render","react_default","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.e3bc0dea.chunk.js","sourcesContent":["var token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp(token, 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n  try {\n    // Try to decode the entire string first\n    return decodeURIComponent(components.join(''));\n  } catch (err) {\n    // Do nothing\n  }\n\n  if (components.length === 1) {\n    return components;\n  }\n\n  split = split || 1;\n\n  // Split the array in 2 parts\n  var left = components.slice(0, split);\n  var right = components.slice(split);\n\n  return Array.prototype.concat.call(\n    [],\n    decodeComponents(left),\n    decodeComponents(right)\n  );\n}\n\nfunction decode(input) {\n  try {\n    return decodeURIComponent(input);\n  } catch (err) {\n    var tokens = input.match(singleMatcher);\n\n    for (var i = 1; i < tokens.length; i++) {\n      input = decodeComponents(tokens, i).join('');\n\n      tokens = input.match(singleMatcher);\n    }\n\n    return input;\n  }\n}\n\nfunction customDecodeURIComponent(input) {\n  // Keep track of all the replacements and prefill the map with the `BOM`\n  var replaceMap = {\n    '%FE%FF': '\\uFFFD\\uFFFD',\n    '%FF%FE': '\\uFFFD\\uFFFD'\n  };\n\n  var match = multiMatcher.exec(input);\n  while (match) {\n    try {\n      // Decode as big chunks as possible\n      replaceMap[match[0]] = decodeURIComponent(match[0]);\n    } catch (err) {\n      var result = decode(match[0]);\n\n      if (result !== match[0]) {\n        replaceMap[match[0]] = result;\n      }\n    }\n\n    match = multiMatcher.exec(input);\n  }\n\n  // Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n  replaceMap['%C2'] = '\\uFFFD';\n\n  var entries = Object.keys(replaceMap);\n\n  for (var i = 0; i < entries.length; i++) {\n    // Replace all decoded components\n    var key = entries[i];\n    input = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n  }\n\n  return input;\n}\n\nmodule.exports = function(encodedURI) {\n  if (typeof encodedURI !== 'string') {\n    throw new TypeError(\n      'Expected `encodedURI` to be of type `string`, got `' +\n        typeof encodedURI +\n        '`'\n    );\n  }\n\n  try {\n    encodedURI = encodedURI.replace(/\\+/g, ' ');\n\n    // Try the built in decoder first\n    return decodeURIComponent(encodedURI);\n  } catch (err) {\n    // Fallback to a more advanced decoder\n    return customDecodeURIComponent(encodedURI);\n  }\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"outer-App\":\"App_outer-App__3RFjy\",\"App\":\"App_App__810ob\"};","const strictUriEncode = str =>\n  encodeURIComponent(str).replace(\n    /[!'()*]/g,\n    x =>\n      `%${x\n        .charCodeAt(0)\n        .toString(16)\n        .toUpperCase()}`\n  );\nconst decodeComponent = require('../decode-uri-component');\n\nfunction encoderForArrayFormat(options) {\n  switch (options.arrayFormat) {\n    case 'index':\n      return (key, value, index) => {\n        return value === null\n          ? [encode(key, options), '[', index, ']'].join('')\n          : [\n              encode(key, options),\n              '[',\n              encode(index, options),\n              ']=',\n              encode(value, options)\n            ].join('');\n      };\n    case 'bracket':\n      return (key, value) => {\n        return value === null\n          ? [encode(key, options), '[]'].join('')\n          : [encode(key, options), '[]=', encode(value, options)].join('');\n      };\n    default:\n      return (key, value) => {\n        return value === null\n          ? encode(key, options)\n          : [encode(key, options), '=', encode(value, options)].join('');\n      };\n  }\n}\n\nfunction parserForArrayFormat(options) {\n  let result;\n\n  switch (options.arrayFormat) {\n    case 'index':\n      return (key, value, accumulator) => {\n        result = /\\[(\\d*)\\]$/.exec(key);\n\n        key = key.replace(/\\[\\d*\\]$/, '');\n\n        if (!result) {\n          accumulator[key] = value;\n          return;\n        }\n\n        if (accumulator[key] === undefined) {\n          accumulator[key] = {};\n        }\n\n        accumulator[key][result[1]] = value;\n      };\n    case 'bracket':\n      return (key, value, accumulator) => {\n        result = /(\\[\\])$/.exec(key);\n        key = key.replace(/\\[\\]$/, '');\n\n        if (!result) {\n          accumulator[key] = value;\n          return;\n        }\n\n        if (accumulator[key] === undefined) {\n          accumulator[key] = [value];\n          return;\n        }\n\n        accumulator[key] = [].concat(accumulator[key], value);\n      };\n    default:\n      return (key, value, accumulator) => {\n        if (accumulator[key] === undefined) {\n          accumulator[key] = value;\n          return;\n        }\n\n        accumulator[key] = [].concat(accumulator[key], value);\n      };\n  }\n}\n\nfunction encode(value, options) {\n  if (options.encode) {\n    return options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n  }\n\n  return value;\n}\n\nfunction decode(value, options) {\n  if (options.decode) {\n    return decodeComponent(value);\n  }\n\n  return value;\n}\n\nfunction keysSorter(input) {\n  if (Array.isArray(input)) {\n    return input.sort();\n  }\n\n  if (typeof input === 'object') {\n    return keysSorter(Object.keys(input))\n      .sort((a, b) => Number(a) - Number(b))\n      .map(key => input[key]);\n  }\n\n  return input;\n}\n\nexport function extract(input) {\n  const queryStart = input.indexOf('?');\n  if (queryStart === -1) {\n    return '';\n  }\n  return input.slice(queryStart + 1);\n}\n\nexport function parse(input, options) {\n  options = Object.assign({ decode: true, arrayFormat: 'none' }, options);\n\n  const formatter = parserForArrayFormat(options);\n\n  // Create an object with no prototype\n  const ret = Object.create(null);\n\n  if (typeof input !== 'string') {\n    return ret;\n  }\n\n  input = input.trim().replace(/^[?#&]/, '');\n\n  if (!input) {\n    return ret;\n  }\n\n  for (const param of input.split('&')) {\n    let [key, value] = param.replace(/\\+/g, ' ').split('=');\n\n    // Missing `=` should be `null`:\n    // http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n    value = value === undefined ? null : decode(value, options);\n\n    formatter(decode(key, options), value, ret);\n  }\n\n  return Object.keys(ret)\n    .sort()\n    .reduce((result, key) => {\n      const value = ret[key];\n      if (\n        Boolean(value) &&\n        typeof value === 'object' &&\n        !Array.isArray(value)\n      ) {\n        // Sort object keys, not values\n        result[key] = keysSorter(value);\n      } else {\n        result[key] = value;\n      }\n\n      return result;\n    }, Object.create(null));\n}\n\n\nexport const stringify = (obj, options) => {\n  const defaults = {\n    encode: true,\n    strict: true,\n    arrayFormat: 'none'\n  };\n\n  options = Object.assign(defaults, options);\n\n  if (options.sort === false) {\n    options.sort = () => {};\n  }\n\n  const formatter = encoderForArrayFormat(options);\n\n  return obj\n    ? Object.keys(obj)\n        .sort(options.sort)\n        .map(key => {\n          const value = obj[key];\n\n          if (value === undefined) {\n            return '';\n          }\n\n          if (value === null) {\n            return encode(key, options);\n          }\n\n          if (Array.isArray(value)) {\n            const result = [];\n\n            for (const value2 of value.slice()) {\n              if (value2 === undefined) {\n                continue;\n              }\n\n              result.push(formatter(key, value2, result.length));\n            }\n\n            return result.join('&');\n          }\n\n          return encode(key, options) + '=' + encode(value, options);\n        })\n        .filter(x => x.length > 0)\n        .join('&')\n    : '';\n};\n\nexport const parseUrl = (input, options) => {\n  return {\n    url: input.split('?')[0] || '',\n    query: parse(extract(input), options)\n  };\n};\n","import * as queryString from '../libs/query-string';\nimport { LS_CURRENT_TIME, URL_MAX_TIME } from './constants';\n\nexport const queryObject = () => {\n  return queryString.parse(window.location.search);\n};\n\nexport const setLocalStorageTime = time => {\n  sessionStorage.setItem(LS_CURRENT_TIME, time);\n};\n\nexport const getLocalStorageTime = () => {\n  const time = sessionStorage.getItem(LS_CURRENT_TIME);\n  return (time && +time) || 0;\n};\n\nexport const currentPercentageTime = currTime => {\n  const localStorageTime = getLocalStorageTime() || 0;\n  const queryMaxTime = queryObject()[URL_MAX_TIME];\n  const maxTime = (+queryMaxTime && +queryMaxTime * 60 * 1000) || 7 * 60 * 1000;\n  let actualTime = 0;\n\n  if (!isNaN(localStorageTime)) {\n    actualTime = +localStorageTime;\n  }\n\n  if (!isNaN(currTime)) {\n    actualTime = +currTime;\n  }\n\n  setLocalStorageTime(actualTime);\n\n  return (Math.min(actualTime, maxTime) * 100) / maxTime;\n};\n","export const LS_CURRENT_TIME = 'currentTime';\nexport const URL_MAX_TIME = 'minutes';\n","import React, { Component } from 'reactn';\nimport {\n  currentPercentageTime,\n  getLocalStorageTime,\n  queryObject\n} from './utils';\n\nimport styles from './App.module.scss';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.currentTime = getLocalStorageTime();\n\n    this.state = {\n      width: `${currentPercentageTime(this.currentTime)}%`,\n      color: queryObject().color || 'red',\n      background: queryObject().background || 'white'\n    };\n  }\n\n  componentDidMount() {\n    this.setLocalInterval();\n    window.addEventListener('click', this.playPauseTimer);\n    window.oncontextmenu = () => !!this.resetTimer();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n    window.removeEventListener('click', this.playPauseTimer);\n  }\n\n  setLocalInterval = () => {\n    this.interval = setInterval(this.setWidth, 1000);\n  };\n\n  playTimer = () => {\n    if (!this.interval) {\n      this.setLocalInterval();\n    }\n  };\n\n  pauseTimer = () => {\n    if (this.interval) {\n      clearInterval(this.interval);\n      this.interval = null;\n    }\n  };\n\n  playPauseTimer = () => {\n    if (this.interval) {\n      this.pauseTimer();\n    } else {\n      this.playTimer();\n    }\n  };\n\n  resetTimer = () => {\n    this.currentTime = 0;\n    this.pauseTimer();\n    this.setWidth();\n  };\n\n  setWidth = () => {\n    this.currentTime += 1000;\n    const newWidth = currentPercentageTime(this.currentTime);\n    if (newWidth === 100) {\n      this.pauseTimer();\n    }\n    this.setState({\n      width: `${newWidth}%`\n    });\n  };\n\n  render() {\n    return (\n      <div\n        className={styles['outer-App']}\n        style={{\n          backgroundColor: this.state.background,\n          borderColor: this.state.color\n        }}\n      >\n        <div\n          className={styles['App']}\n          style={{\n            width: this.state.width,\n            backgroundColor: this.state.color\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// Dependencies\nimport { addReducer, setGlobal } from 'reactn';\n\n// Initial state\nsetGlobal({\n  width: '100%',\n  color: 'red',\n  background: 'white'\n});\n\n// Reducers\naddReducer('fetchData', () =>\n  fetch('index.html')\n    .then(response => response.text())\n    .then(html => ({\n      data: html\n    }))\n);\n\naddReducer('incrementX', state => ({\n  x: state.x + 1\n}));\n\naddReducer('decrementX', state => ({\n  x: state.x - 1\n}));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport './serviceWorker';\n\nimport './GlobalState';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// serviceWorker.unregister();\n"],"sourceRoot":""}